<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
      ">

    <!-- 扫包 -->
    <context:component-scan base-package="com.wq.controller"></context:component-scan>


    <!--以下映射器和适配器的配置可以通过注解驱动来代替  -->
    <mvc:annotation-driven>
        <!--配置消息转换器，@ResponseBody,@RequestBody字符串转换-->
        <mvc:message-converters>
            <bean id="mappingJacksonHttpMessageConverter"
                  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">

                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                        <value>application/json;charset=utf-8</value>
                    </list>
                </property>
            </bean>

            <!--解决返回String中文乱码的问题-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html; charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 返回json 方法一 需要导入 fastjson.jar包 -->
    <!--<mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            &lt;!&ndash; 避免IE执行AJAX时,返回JSON出现下载文件 &ndash;&gt;
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        &lt;!&ndash; 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 &ndash;&gt;
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>-->

    <!-- 返回json 方法二 需要导入 jackson-annotations.jar,jackson-core.jar,jackson-databind.jar-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                //下面配置无法解决返回String乱码问题
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8" />
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>-->

    <!--对静态资源文件的访问  必须要设置，因为在springmvc的配置中配置了/匹配所有请求，
   此工程所有的请求(.do ,addUser,js/image/css)都会被springmvc解析,
   必须对所有的静态资源文件进行过滤放行 -->
    <!--<mvc:default-servlet-handler/>-->

    <mvc:resources location="/static/html/" mapping="/static/html/**"/>

    <!-- 拦截器定义 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash; 个人中心也需要登陆  以admin开头的配置都会进行拦截&ndash;&gt;
            <mvc:mapping path="/admin/**"></mvc:mapping>
            &lt;!&ndash; 这个是设置不会进入拦截器的路径 &ndash;&gt;
            <mvc:exclude-mapping path="/resource/**"/>
            &lt;!&ndash; 拦截器进入的类，返回false表示不会进入输入的路径 &ndash;&gt;
            <bean class="com.wq.core.LoginInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>-->


    <!-- 文件上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 文件最大5M -->
        <property name="maxUploadSize" value="5242880"/>
        <!-- 默认编码UTF-8 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 延迟加载 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- 视图渲染 jsp/freemaker/velocity-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 制定页面存放的路径 -->
        <property name="prefix" value="/WEB-INF/pages/"></property>
        <!-- 文件的后缀 -->
        <property name="suffix" value=".jsp"></property>
    </bean>

</beans>