<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">


    <!-- 连接服务配置 如果MQ服务器在远程服务器上，请新建用户用新建的用户名密码  guest默认不允许远程登录-->
    <rabbit:connection-factory id="connectionFactory"
                               host="${rabbit.host}" username="${rabbit.username}" password="${rabbit.password}"
                               port="${rabbit.port}" virtual-host="/" channel-cache-size="5"/>
    <!-- 配置admin，自动根据配置文件生成交换器和队列，无需手动配置 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- queue 队列声明 -->
    <rabbit:queue durable="true"
                  auto-delete="false" exclusive="false" name="spring.queue.tag"/>


    <!-- exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="spring.queue.exchange"
                            durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="spring.queue.tag" key="spring.queue.tag.key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列，由于Gson的速度快于jackson,这里替换为Gson的一个实现 -->
    <bean id="jsonMessageConverter" class="com.wq.rabbitmq.converter.Gson2JsonMessageConverter"/>

    <!-- spring template声明 -->
    <rabbit:template id="amqpTemplate" exchange="spring.queue.exchange" routing-key="spring.queue.tag.key"
                     connection-factory="connectionFactory" message-converter="jsonMessageConverter"/>


    <!--下面为消费者配置-->
    <bean id="receiveMessageListener"
          class="com.wq.rabbitmq.listener.QueueListenter"/>

    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual">
        <rabbit:listener queues="spring.queue.tag" ref="receiveMessageListener"/>
    </rabbit:listener-container>


</beans>